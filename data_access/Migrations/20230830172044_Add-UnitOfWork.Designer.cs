// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamApplication.DatabaseContext;

#nullable disable

namespace SteamApplication.Migrations
{
    [DbContext(typeof(SteamDb))]
    [Migration("20230830172044_Add-UnitOfWork")]
    partial class AddUnitOfWork
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("data_access.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Category");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Category 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Category 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Category 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Category 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Category 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Category 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Category 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Category 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Category 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Category 15"
                        });
                });

            modelBuilder.Entity("data_access.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("Followers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("Company");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Followers = 100,
                            Name = "Developer 1"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Followers = 200,
                            Name = "Developer 2"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Followers = 300,
                            Name = "Developer 3"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Followers = 400,
                            Name = "Developer 4"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Followers = 500,
                            Name = "Developer 5"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            Followers = 600,
                            Name = "Developer 6"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            Followers = 700,
                            Name = "Developer 7"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            Followers = 800,
                            Name = "Developer 8"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            Followers = 900,
                            Name = "Developer 9"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            Followers = 1000,
                            Name = "Developer 10"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 11,
                            Followers = 1100,
                            Name = "Developer 11"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 12,
                            Followers = 1200,
                            Name = "Developer 12"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 13,
                            Followers = 1300,
                            Name = "Developer 13"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 14,
                            Followers = 1400,
                            Name = "Developer 14"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 15,
                            Followers = 1500,
                            Name = "Developer 15"
                        });
                });

            modelBuilder.Entity("data_access.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Country 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Country 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Country 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Country 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Country 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Country 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Country 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Country 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Country 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Country 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Country 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Country 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Country 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Country 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Country 15"
                        });
                });

            modelBuilder.Entity("data_access.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<short?>("Rate")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CompanyId = 1,
                            Cost = 9.99m,
                            Description = "Description 1",
                            Name = "Game 1",
                            PlatformId = 1,
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CompanyId = 2,
                            Cost = 19.99m,
                            Description = "Description 2",
                            Name = "Game 2",
                            PlatformId = 2,
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CompanyId = 3,
                            Cost = 14.99m,
                            Description = "Description 3",
                            Name = "Game 3",
                            PlatformId = 3,
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CompanyId = 4,
                            Cost = 29.99m,
                            Description = "Description 4",
                            Name = "Game 4",
                            PlatformId = 4,
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CompanyId = 5,
                            Cost = 9.99m,
                            Description = "Description 5",
                            Name = "Game 5",
                            PlatformId = 5,
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CompanyId = 6,
                            Cost = 19.99m,
                            Description = "Description 6",
                            Name = "Game 6",
                            PlatformId = 6,
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CompanyId = 7,
                            Cost = 14.99m,
                            Description = "Description 7",
                            Name = "Game 7",
                            PlatformId = 7,
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CompanyId = 8,
                            Cost = 29.99m,
                            Description = "Description 8",
                            Name = "Game 8",
                            PlatformId = 8,
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CompanyId = 9,
                            Cost = 9.99m,
                            Description = "Description 9",
                            Name = "Game 9",
                            PlatformId = 9,
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CompanyId = 10,
                            Cost = 19.99m,
                            Description = "Description 10",
                            Name = "Game 10",
                            PlatformId = 10,
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 11,
                            CompanyId = 11,
                            Cost = 14.99m,
                            Description = "Description 11",
                            Name = "Game 11",
                            PlatformId = 11,
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 12,
                            CompanyId = 12,
                            Cost = 29.99m,
                            Description = "Description 12",
                            Name = "Game 12",
                            PlatformId = 12,
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 13,
                            CompanyId = 13,
                            Cost = 9.99m,
                            Description = "Description 13",
                            Name = "Game 13",
                            PlatformId = 13,
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 14,
                            CompanyId = 14,
                            Cost = 19.99m,
                            Description = "Description 14",
                            Name = "Game 14",
                            PlatformId = 14,
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 15,
                            CompanyId = 15,
                            Cost = 14.99m,
                            Description = "Description 15",
                            Name = "Game 15",
                            PlatformId = 15,
                            Rate = (short)4
                        });
                });

            modelBuilder.Entity("data_access.Entities.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Followers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Rate")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Followers = 100,
                            Name = "Group 1",
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 2,
                            Followers = 200,
                            Name = "Group 2",
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 3,
                            Followers = 300,
                            Name = "Group 3",
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 4,
                            Followers = 400,
                            Name = "Group 4",
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 5,
                            Followers = 500,
                            Name = "Group 5",
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 6,
                            Followers = 600,
                            Name = "Group 6",
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 7,
                            Followers = 700,
                            Name = "Group 7",
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 8,
                            Followers = 800,
                            Name = "Group 8",
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 9,
                            Followers = 900,
                            Name = "Group 9",
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 10,
                            Followers = 1000,
                            Name = "Group 10",
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 11,
                            Followers = 1100,
                            Name = "Group 11",
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 12,
                            Followers = 1200,
                            Name = "Group 12",
                            Rate = (short)4
                        },
                        new
                        {
                            Id = 13,
                            Followers = 1300,
                            Name = "Group 13",
                            Rate = (short)5
                        },
                        new
                        {
                            Id = 14,
                            Followers = 1400,
                            Name = "Group 14",
                            Rate = (short)3
                        },
                        new
                        {
                            Id = 15,
                            Followers = 1500,
                            Name = "Group 15",
                            Rate = (short)4
                        });
                });

            modelBuilder.Entity("data_access.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Platform 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Platform 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Platform 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Platform 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Platform 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Platform 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Platform 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Platform 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Platform 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Platform 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Platform 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Platform 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Platform 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Platform 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Platform 15"
                        });
                });

            modelBuilder.Entity("data_access.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Position 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Position 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Position 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Position 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Position 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Position 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Position 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Position 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Position 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Position 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Position 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Position 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Position 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Position 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Position 15"
                        });
                });

            modelBuilder.Entity("data_access.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Commentaries");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Review 1",
                            GameId = 1,
                            Rating = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Review 2",
                            GameId = 2,
                            Rating = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Review 3",
                            GameId = 3,
                            Rating = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Review 4",
                            GameId = 4,
                            Rating = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Review 5",
                            GameId = 5,
                            Rating = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Comment = "Review 6",
                            GameId = 6,
                            Rating = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Review 7",
                            GameId = 7,
                            Rating = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Comment = "Review 8",
                            GameId = 8,
                            Rating = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Comment = "Review 9",
                            GameId = 9,
                            Rating = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Comment = "Review 10",
                            GameId = 10,
                            Rating = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Comment = "Review 11",
                            GameId = 11,
                            Rating = 4,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Comment = "Review 12",
                            GameId = 12,
                            Rating = 5,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Comment = "Review 13",
                            GameId = 13,
                            Rating = 4,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Comment = "Review 14",
                            GameId = 14,
                            Rating = 3,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            Comment = "Review 15",
                            GameId = 15,
                            Rating = 5,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("data_access.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerifiedAccount")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PositionId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Date = new DateTime(2023, 7, 31, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(856),
                            Email = "user1@example.com",
                            GroupId = 1,
                            IsVerifiedAccount = true,
                            NickName = "User1",
                            Password = "password1",
                            Phone = "1234567890",
                            PositionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Date = new DateTime(2023, 7, 16, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(868),
                            Email = "user2@example.com",
                            GroupId = 2,
                            IsVerifiedAccount = false,
                            NickName = "User2",
                            Password = "password2",
                            Phone = "9876543210",
                            PositionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Date = new DateTime(2023, 7, 1, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(870),
                            Email = "user3@example.com",
                            GroupId = 3,
                            IsVerifiedAccount = true,
                            NickName = "User3",
                            Password = "password3",
                            Phone = "5555555555",
                            PositionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Date = new DateTime(2023, 6, 16, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(871),
                            Email = "user4@example.com",
                            GroupId = 4,
                            IsVerifiedAccount = false,
                            NickName = "User4",
                            Password = "password4",
                            Phone = "4444444444",
                            PositionId = 4
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Date = new DateTime(2023, 6, 1, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(872),
                            Email = "user5@example.com",
                            GroupId = 5,
                            IsVerifiedAccount = true,
                            NickName = "User5",
                            Password = "password5",
                            Phone = "5555555555",
                            PositionId = 5
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            Date = new DateTime(2023, 5, 17, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(874),
                            Email = "user6@example.com",
                            GroupId = 6,
                            IsVerifiedAccount = true,
                            NickName = "User6",
                            Password = "password6",
                            Phone = "6666666666",
                            PositionId = 6
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            Date = new DateTime(2023, 5, 2, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(875),
                            Email = "user7@example.com",
                            GroupId = 7,
                            IsVerifiedAccount = false,
                            NickName = "User7",
                            Password = "password7",
                            Phone = "7777777777",
                            PositionId = 7
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            Date = new DateTime(2023, 4, 17, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(876),
                            Email = "user8@example.com",
                            GroupId = 8,
                            IsVerifiedAccount = true,
                            NickName = "User8",
                            Password = "password8",
                            Phone = "8888888888",
                            PositionId = 8
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            Date = new DateTime(2023, 4, 2, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(877),
                            Email = "user9@example.com",
                            GroupId = 9,
                            IsVerifiedAccount = false,
                            NickName = "User9",
                            Password = "password9",
                            Phone = "9999999999",
                            PositionId = 9
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            Date = new DateTime(2023, 3, 18, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(878),
                            Email = "user10@example.com",
                            GroupId = 10,
                            IsVerifiedAccount = true,
                            NickName = "User10",
                            Password = "password10",
                            Phone = "1010101010",
                            PositionId = 10
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 11,
                            Date = new DateTime(2023, 3, 3, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(880),
                            Email = "user11@example.com",
                            GroupId = 11,
                            IsVerifiedAccount = false,
                            NickName = "User11",
                            Password = "password11",
                            Phone = "1111111111",
                            PositionId = 11
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 12,
                            Date = new DateTime(2023, 2, 16, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(881),
                            Email = "user12@example.com",
                            GroupId = 12,
                            IsVerifiedAccount = true,
                            NickName = "User12",
                            Password = "password12",
                            Phone = "1212121212",
                            PositionId = 12
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 13,
                            Date = new DateTime(2023, 2, 1, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(882),
                            Email = "user13@example.com",
                            GroupId = 13,
                            IsVerifiedAccount = true,
                            NickName = "User13",
                            Password = "password13",
                            Phone = "1313131313",
                            PositionId = 13
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 14,
                            Date = new DateTime(2023, 1, 17, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(883),
                            Email = "user14@example.com",
                            GroupId = 14,
                            IsVerifiedAccount = false,
                            NickName = "User14",
                            Password = "password14",
                            Phone = "1414141414",
                            PositionId = 14
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 15,
                            Date = new DateTime(2023, 1, 2, 20, 20, 43, 851, DateTimeKind.Local).AddTicks(884),
                            Email = "user15@example.com",
                            GroupId = 15,
                            IsVerifiedAccount = true,
                            NickName = "User15",
                            Password = "password15",
                            Phone = "1515151515",
                            PositionId = 15
                        });
                });

            modelBuilder.Entity("data_access.Entities.Company", b =>
                {
                    b.HasOne("data_access.Entities.Country", "Country")
                        .WithMany("Company")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("data_access.Entities.Game", b =>
                {
                    b.HasOne("data_access.Entities.Category", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data_access.Entities.Company", "Company")
                        .WithMany("Game")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data_access.Entities.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("data_access.Entities.Review", b =>
                {
                    b.HasOne("data_access.Entities.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data_access.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("data_access.Entities.User", b =>
                {
                    b.HasOne("data_access.Entities.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data_access.Entities.Groups", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data_access.Entities.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Group");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("data_access.Entities.Category", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("data_access.Entities.Company", b =>
                {
                    b.Navigation("Game");
                });

            modelBuilder.Entity("data_access.Entities.Country", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("data_access.Entities.Game", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("data_access.Entities.Groups", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("data_access.Entities.Platform", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("data_access.Entities.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("data_access.Entities.User", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
